/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package itemmaker;

import Base.SpriteBinder;
import Base.Window;
import Base.util.StringUtils;
import gui.items.Item;
import gui.items.ItemHandler;
import java.io.PrintWriter;
import java.util.LinkedList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Bayjose
 */
public class ItemEditor extends javax.swing.JFrame {

    /**
     * Creates new form ItemEditor
     */
//    public Item item;
    public String[] itemNames;
    public String[] itemIDs;
            
    LinkedList<DataObject> dataObjects = new LinkedList<DataObject>();
    private boolean Loading = false;
    
    public ItemEditor() {
        listModel = new DefaultListModel();
        initSaves();
        this.setIconImage(SpriteBinder.checkImage("preview.png"));
        initComponents();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
    }
    
    public void initSaves(){
        this.itemIDs = StringUtils.loadData("items/index.txt");
        LinkedList<String> listId = new LinkedList<String>();
        LinkedList<String> listName = new LinkedList<String>();
        for(int i=0; i<itemIDs.length; i++){
            listId.add(itemIDs[i]);
            Item tempItem = ItemHandler.loadItem(itemIDs[i]);
            if(tempItem!=null){
                listName.add(tempItem.name);
            }else{
                listName.add("null");
            }
        }
        for(int i=0; i<listName.size(); i++){
            if(listName.get(i).equals("null")){
                listName.remove(i);
                listId.remove(i);
            }
        }
        this.itemIDs = new String[listName.size()];
        this.itemNames = new String[listName.size()];
        for(int i=0; i<listName.size(); i++){
            itemIDs[i] = listId.get(i);
            itemNames[i] = listName.get(i);
        }

    }
    
    public int getIndexinNameArray(String input){
        for(int i=0; i<this.itemNames.length; i++){
            if(itemNames[i].equals(input)){
                return i;
            }
        }
        return -1;
    }
    
    public void clearItems(){
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollPane1 = new java.awt.ScrollPane();
        jFrame1 = new javax.swing.JFrame();
        jFrame2 = new javax.swing.JFrame();
        Components = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        NameField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        ItemID = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        ListOfComponents = new javax.swing.JList(listModel);
        RemoveSelected = new javax.swing.JButton();
        Save = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        MaxStackSize = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton3 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jComboBox1 = new javax.swing.JComboBox();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Item Editor");

        Components.setModel(new javax.swing.DefaultComboBoxModel(ItemHandler.getElements()));

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Name:");

        jLabel2.setText("Unique Item ID:");

        jButton2.setText("Random");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        ItemID.setDocument(new JTextFieldLimit(8));
        ItemID.setText("00000000");
        ItemID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemIDActionPerformed(evt);
            }
        });

        ListOfComponents.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ListOfComponentsFocusGained(evt);
            }
        });
        ListOfComponents.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                ListOfComponentsValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(ListOfComponents);

        RemoveSelected.setText("Remove Selected");
        RemoveSelected.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveSelectedActionPerformed(evt);
            }
        });

        Save.setText("Save");
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });

        jLabel3.setText("Load ID");

        jButton5.setText("Load");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel4.setText("Max Stack Size:");

        MaxStackSize.setDocument(new JTextFieldLimit(3));
        MaxStackSize.setText("1");
        MaxStackSize.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                MaxStackSizeFocusLost(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextArea1FocusLost(evt);
            }
        });
        jScrollPane2.setViewportView(jTextArea1);

        jButton3.setText("Preview");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jCheckBox1.setText("Use Lighting Engine");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(itemNames));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(Components, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(296, 296, 296)
                                .addComponent(jLabel2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(MaxStackSize)
                            .addComponent(ItemID, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBox1, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(RemoveSelected, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(Save, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(NameField, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton5)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jButton2)
                    .addComponent(ItemID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Components, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1)
                        .addComponent(MaxStackSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton3)
                        .addComponent(jCheckBox1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RemoveSelected)
                    .addComponent(Save)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5)
                    .addComponent(jLabel3))
                .addGap(5, 5, 5))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        ItemID.setText(StringUtils.randomExtension(8));
        if(ItemID.getText().length()>8){
            ItemID.setText(ItemID.getText().substring(0, 7));
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void ItemIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ItemIDActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        int index = getIndexinNameArray(jComboBox1.getSelectedItem()+"");
        Item item = ItemHandler.loadItem(this.itemIDs[index]);
        this.ItemID.setText(this.itemIDs[index]);
        this.clearComponentArray();
        if(item!=null){
            NameField.setText(item.name);
            MaxStackSize.setText(""+item.maxStackSize);
            for(int i=0; i<item.components.length; i++){
                listModel.addElement(item.components[i].ect.toString());
                this.dataObjects.add(new DataObject(item.components[i].getData()));
            }
            
            this.ListOfComponents.setSelectedIndex(this.listModel.size()-1);
        }else{
           JOptionPane.showMessageDialog (null, "The Item you are trying to load does not exist", "Loading Error", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        listModel.addElement(Components.getSelectedItem().toString());
        dataObjects.add(new DataObject(new String[]{Components.getSelectedItem().toString()}));
        this.jTextArea1.setText("");
        for(int i=0; i<dataObjects.getLast().data.length; i++){
            this.jTextArea1.append(dataObjects.getLast().data[i]+"\n");
        }
        this.ListOfComponents.setSelectedIndex(this.listModel.size()-1);
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void RemoveSelectedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveSelectedActionPerformed
        // TODO add your handling code here:
        listModel.remove(ListOfComponents.getSelectedIndex());
        this.dataObjects.remove(ListOfComponents.getSelectedIndex());
    }//GEN-LAST:event_RemoveSelectedActionPerformed

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
        // TODO add your handling code here:
        try {
            PrintWriter out = new PrintWriter("Items/Item_"+ItemID.getText()+".itm");
            out.println("Item:"+this.NameField.getText());
            out.println("MaxStackSize:"+this.MaxStackSize.getText());
            for(int i = 0; i<this.ListOfComponents.getModel().getSize(); i++){
                out.println("Component_"+listModel.getElementAt(i).toString());
                for(int j=0; j<this.dataObjects.get(i).data.length; j++){
                    out.println(this.dataObjects.get(i).data[j]);
                }
            }
            out.close();
        } catch (Exception e) {
           e.printStackTrace();
        }
    }//GEN-LAST:event_SaveActionPerformed

    private void ListOfComponentsFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ListOfComponentsFocusGained
        
    }//GEN-LAST:event_ListOfComponentsFocusGained

    private void MaxStackSizeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_MaxStackSizeFocusLost
       try{
            if(Integer.parseInt(this.MaxStackSize.getText())<=0){
                this.MaxStackSize.setText("1");
            }
            if(Integer.parseInt(this.MaxStackSize.getText())>999){
                this.MaxStackSize.setText("999");
            }
       }catch(Exception e){
          this.MaxStackSize.setText("1"); 
       }
    }//GEN-LAST:event_MaxStackSizeFocusLost

    private void ListOfComponentsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_ListOfComponentsValueChanged
        // TODO add your handling code here:
        //when the new lineItem is selected, 
        if(!Loading){
            try{
                this.jTextArea1.setText("");
                for(int i=0; i<dataObjects.get(this.ListOfComponents.getSelectedIndex()).data.length; i++){
                    this.jTextArea1.append(dataObjects.get(this.ListOfComponents.getSelectedIndex()).data[i]+"\n");
                }
            }catch(Exception e){
                System.err.println("Shit just happened");
            }
        }
    }//GEN-LAST:event_ListOfComponentsValueChanged

    private void jTextArea1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextArea1FocusLost
        // TODO add your handling code here:
        this.dataObjects.get(this.ListOfComponents.getSelectedIndex()).data = (this.jTextArea1.getText().split("\n"));
    }//GEN-LAST:event_jTextArea1FocusLost

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        boolean useLighting = false;
            if(this.jCheckBox1.isSelected()){
                useLighting = true;
            }else{
                useLighting = false;
            }
        new Window(this.getWidth(), this.getHeight(), "Preview of:"+this.NameField.getText(), new ItemGame(this.getWidth()/2, this.getHeight()/2,ItemHandler.loadItem(""+this.ItemID.getText()), useLighting));
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void clearComponentArray(){
        this.Loading = true;
        for(int i=0; i<this.dataObjects.size(); i++){
            listModel.remove(i);
            this.dataObjects.remove(i);
        }
        this.Loading = false;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ItemEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ItemEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ItemEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ItemEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                new ItemEditor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox Components;
    private javax.swing.JTextField ItemID;
    private javax.swing.JList ListOfComponents;
    private javax.swing.JTextField MaxStackSize;
    private javax.swing.JTextField NameField;
    private javax.swing.JButton RemoveSelected;
    private javax.swing.JButton Save;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private java.awt.ScrollPane scrollPane1;
    // End of variables declaration//GEN-END:variables
    private DefaultListModel listModel;
    
}
