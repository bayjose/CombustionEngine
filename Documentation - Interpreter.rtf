{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf130
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Todo - code today\
- Add function to print the interpreted script to an interpreted file, the interpreted script is any line that comes out of the interpreter\
- 1 print name of script on first line\
- print all variables in the order they were added\
- print the body of the script, with the ref-expr:x in the code\
- print all expressions that this script has, \
\
\
- rework interpreter\
- first code is broken up into sections\
- main section is anything that is not in a statement\
- statements are identified by the portion of code \'93)\{\'93 this can follow if:()\{ or for:()\{\
- these statements are then replaced with a linear command, like ref-expr:1 to refer to expression 1\
- Note -ref-expr: is a line that the interpreter creates itself, it should not be used as a command in scripts created by the user.\
- Expressions are broken up in the following way\
- Guard  first line of statement, the conditional to run the rest of the statement - in the ()\
- Body  The code in \{\} Note that if a statement is within another statement, it in its entirety will have been replaced with ref-expr:x where x is its number in the list, and thus a new reference will be sent to the interpreter, this allows for the code to be interpreted in a way that visually is:\
     - top to bottom, inside out\
- End - what the code should do after interpretation, if its an if statement, break, if its a for loop, loop, and wait for the Guard to return false, then override the loop and force a break. \
}